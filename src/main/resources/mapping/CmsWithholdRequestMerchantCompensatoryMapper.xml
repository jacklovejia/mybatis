<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jack.mapper.CmsWithholdRequestMerchantCompensatoryMapper" >
  <resultMap id="BaseResultMap" type="com.jack.entity.CmsWithholdRequestMerchantCompensatory" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="uid" property="uid" jdbcType="BIGINT" />
    <result column="project_id" property="projectId" jdbcType="BIGINT" />
    <result column="planstep" property="planstep" jdbcType="INTEGER" />
    <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="add_time" property="addTime" jdbcType="BIGINT" />
    <result column="end_time" property="endTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, uid, project_id, planstep, total_amount, status, add_time, end_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jack.entity.CmsWithholdRequestMerchantCompensatoryExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cms_withhold_request_merchant_compensatory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from cms_withhold_request_merchant_compensatory
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from cms_withhold_request_merchant_compensatory
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jack.entity.CmsWithholdRequestMerchantCompensatoryExample" >
    delete from cms_withhold_request_merchant_compensatory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jack.entity.CmsWithholdRequestMerchantCompensatory" >
    insert into cms_withhold_request_merchant_compensatory (id, uid, project_id, 
      planstep, total_amount, status, 
      add_time, end_time)
    values (#{id,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, 
      #{planstep,jdbcType=INTEGER}, #{totalAmount,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, 
      #{addTime,jdbcType=BIGINT}, #{endTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.jack.entity.CmsWithholdRequestMerchantCompensatory" >
    insert into cms_withhold_request_merchant_compensatory
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="planstep != null" >
        planstep,
      </if>
      <if test="totalAmount != null" >
        total_amount,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="planstep != null" >
        #{planstep,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null" >
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=BIGINT},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jack.entity.CmsWithholdRequestMerchantCompensatoryExample" resultType="java.lang.Integer" >
    select count(*) from cms_withhold_request_merchant_compensatory
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update cms_withhold_request_merchant_compensatory
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.uid != null" >
        uid = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.projectId != null" >
        project_id = #{record.projectId,jdbcType=BIGINT},
      </if>
      <if test="record.planstep != null" >
        planstep = #{record.planstep,jdbcType=INTEGER},
      </if>
      <if test="record.totalAmount != null" >
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null" >
        add_time = #{record.addTime,jdbcType=BIGINT},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update cms_withhold_request_merchant_compensatory
    set id = #{record.id,jdbcType=BIGINT},
      uid = #{record.uid,jdbcType=BIGINT},
      project_id = #{record.projectId,jdbcType=BIGINT},
      planstep = #{record.planstep,jdbcType=INTEGER},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=BIGINT},
      end_time = #{record.endTime,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jack.entity.CmsWithholdRequestMerchantCompensatory" >
    update cms_withhold_request_merchant_compensatory
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="planstep != null" >
        planstep = #{planstep,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null" >
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=BIGINT},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jack.entity.CmsWithholdRequestMerchantCompensatory" >
    update cms_withhold_request_merchant_compensatory
    set uid = #{uid,jdbcType=BIGINT},
      project_id = #{projectId,jdbcType=BIGINT},
      planstep = #{planstep,jdbcType=INTEGER},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=BIGINT},
      end_time = #{endTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
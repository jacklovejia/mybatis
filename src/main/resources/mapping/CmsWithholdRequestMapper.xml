<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jack.mapper.CmsWithholdRequestMapper" >
  <resultMap id="BaseResultMap" type="com.jack.entity.CmsWithholdRequest" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="api_name" property="apiName" jdbcType="CHAR" />
    <result column="contract_no" property="contractNo" jdbcType="CHAR" />
    <result column="request_no" property="requestNo" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="project_id" property="projectId" jdbcType="BIGINT" />
    <result column="plan_step" property="planStep" jdbcType="INTEGER" />
    <result column="bank_code" property="bankCode" jdbcType="CHAR" />
    <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="recharge_amount" property="rechargeAmount" jdbcType="DECIMAL" />
    <result column="overdue_flag" property="overdueFlag" jdbcType="INTEGER" />
    <result column="income_free" property="incomeFree" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="phase" property="phase" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="req_time" property="reqTime" jdbcType="BIGINT" />
    <result column="res_time" property="resTime" jdbcType="BIGINT" />
    <result column="end_time" property="endTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, api_name, contract_no, request_no, user_id, project_id, plan_step, bank_code, 
    total_amount, recharge_amount, overdue_flag, income_free, status, phase, type, req_time, 
    res_time, end_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jack.entity.CmsWithholdRequestExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cms_withhold_request
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from cms_withhold_request
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from cms_withhold_request
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jack.entity.CmsWithholdRequestExample" >
    delete from cms_withhold_request
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jack.entity.CmsWithholdRequest" >
    insert into cms_withhold_request (id, api_name, contract_no, 
      request_no, user_id, project_id, 
      plan_step, bank_code, total_amount, 
      recharge_amount, overdue_flag, income_free, 
      status, phase, type, 
      req_time, res_time, end_time
      )
    values (#{id,jdbcType=BIGINT}, #{apiName,jdbcType=CHAR}, #{contractNo,jdbcType=CHAR}, 
      #{requestNo,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, 
      #{planStep,jdbcType=INTEGER}, #{bankCode,jdbcType=CHAR}, #{totalAmount,jdbcType=DECIMAL}, 
      #{rechargeAmount,jdbcType=DECIMAL}, #{overdueFlag,jdbcType=INTEGER}, #{incomeFree,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{phase,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{reqTime,jdbcType=BIGINT}, #{resTime,jdbcType=BIGINT}, #{endTime,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jack.entity.CmsWithholdRequest" >
    insert into cms_withhold_request
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="apiName != null" >
        api_name,
      </if>
      <if test="contractNo != null" >
        contract_no,
      </if>
      <if test="requestNo != null" >
        request_no,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="planStep != null" >
        plan_step,
      </if>
      <if test="bankCode != null" >
        bank_code,
      </if>
      <if test="totalAmount != null" >
        total_amount,
      </if>
      <if test="rechargeAmount != null" >
        recharge_amount,
      </if>
      <if test="overdueFlag != null" >
        overdue_flag,
      </if>
      <if test="incomeFree != null" >
        income_free,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="phase != null" >
        phase,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="reqTime != null" >
        req_time,
      </if>
      <if test="resTime != null" >
        res_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="apiName != null" >
        #{apiName,jdbcType=CHAR},
      </if>
      <if test="contractNo != null" >
        #{contractNo,jdbcType=CHAR},
      </if>
      <if test="requestNo != null" >
        #{requestNo,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="planStep != null" >
        #{planStep,jdbcType=INTEGER},
      </if>
      <if test="bankCode != null" >
        #{bankCode,jdbcType=CHAR},
      </if>
      <if test="totalAmount != null" >
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="rechargeAmount != null" >
        #{rechargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="overdueFlag != null" >
        #{overdueFlag,jdbcType=INTEGER},
      </if>
      <if test="incomeFree != null" >
        #{incomeFree,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="phase != null" >
        #{phase,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="reqTime != null" >
        #{reqTime,jdbcType=BIGINT},
      </if>
      <if test="resTime != null" >
        #{resTime,jdbcType=BIGINT},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jack.entity.CmsWithholdRequestExample" resultType="java.lang.Integer" >
    select count(*) from cms_withhold_request
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update cms_withhold_request
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.apiName != null" >
        api_name = #{record.apiName,jdbcType=CHAR},
      </if>
      <if test="record.contractNo != null" >
        contract_no = #{record.contractNo,jdbcType=CHAR},
      </if>
      <if test="record.requestNo != null" >
        request_no = #{record.requestNo,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.projectId != null" >
        project_id = #{record.projectId,jdbcType=BIGINT},
      </if>
      <if test="record.planStep != null" >
        plan_step = #{record.planStep,jdbcType=INTEGER},
      </if>
      <if test="record.bankCode != null" >
        bank_code = #{record.bankCode,jdbcType=CHAR},
      </if>
      <if test="record.totalAmount != null" >
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.rechargeAmount != null" >
        recharge_amount = #{record.rechargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.overdueFlag != null" >
        overdue_flag = #{record.overdueFlag,jdbcType=INTEGER},
      </if>
      <if test="record.incomeFree != null" >
        income_free = #{record.incomeFree,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.phase != null" >
        phase = #{record.phase,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.reqTime != null" >
        req_time = #{record.reqTime,jdbcType=BIGINT},
      </if>
      <if test="record.resTime != null" >
        res_time = #{record.resTime,jdbcType=BIGINT},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update cms_withhold_request
    set id = #{record.id,jdbcType=BIGINT},
      api_name = #{record.apiName,jdbcType=CHAR},
      contract_no = #{record.contractNo,jdbcType=CHAR},
      request_no = #{record.requestNo,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      project_id = #{record.projectId,jdbcType=BIGINT},
      plan_step = #{record.planStep,jdbcType=INTEGER},
      bank_code = #{record.bankCode,jdbcType=CHAR},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      recharge_amount = #{record.rechargeAmount,jdbcType=DECIMAL},
      overdue_flag = #{record.overdueFlag,jdbcType=INTEGER},
      income_free = #{record.incomeFree,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      phase = #{record.phase,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      req_time = #{record.reqTime,jdbcType=BIGINT},
      res_time = #{record.resTime,jdbcType=BIGINT},
      end_time = #{record.endTime,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jack.entity.CmsWithholdRequest" >
    update cms_withhold_request
    <set >
      <if test="apiName != null" >
        api_name = #{apiName,jdbcType=CHAR},
      </if>
      <if test="contractNo != null" >
        contract_no = #{contractNo,jdbcType=CHAR},
      </if>
      <if test="requestNo != null" >
        request_no = #{requestNo,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="planStep != null" >
        plan_step = #{planStep,jdbcType=INTEGER},
      </if>
      <if test="bankCode != null" >
        bank_code = #{bankCode,jdbcType=CHAR},
      </if>
      <if test="totalAmount != null" >
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="rechargeAmount != null" >
        recharge_amount = #{rechargeAmount,jdbcType=DECIMAL},
      </if>
      <if test="overdueFlag != null" >
        overdue_flag = #{overdueFlag,jdbcType=INTEGER},
      </if>
      <if test="incomeFree != null" >
        income_free = #{incomeFree,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="phase != null" >
        phase = #{phase,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="reqTime != null" >
        req_time = #{reqTime,jdbcType=BIGINT},
      </if>
      <if test="resTime != null" >
        res_time = #{resTime,jdbcType=BIGINT},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jack.entity.CmsWithholdRequest" >
    update cms_withhold_request
    set api_name = #{apiName,jdbcType=CHAR},
      contract_no = #{contractNo,jdbcType=CHAR},
      request_no = #{requestNo,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      project_id = #{projectId,jdbcType=BIGINT},
      plan_step = #{planStep,jdbcType=INTEGER},
      bank_code = #{bankCode,jdbcType=CHAR},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      recharge_amount = #{rechargeAmount,jdbcType=DECIMAL},
      overdue_flag = #{overdueFlag,jdbcType=INTEGER},
      income_free = #{incomeFree,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      phase = #{phase,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      req_time = #{reqTime,jdbcType=BIGINT},
      res_time = #{resTime,jdbcType=BIGINT},
      end_time = #{endTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
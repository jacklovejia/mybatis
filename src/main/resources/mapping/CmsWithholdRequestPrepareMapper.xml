<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jack.mapper.CmsWithholdRequestPrepareMapper" >
  <resultMap id="BaseResultMap" type="com.jack.entity.CmsWithholdRequestPrepare" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="request_id" property="requestId" jdbcType="BIGINT" />
    <result column="contract_no" property="contractNo" jdbcType="CHAR" />
    <result column="request_no" property="requestNo" jdbcType="CHAR" />
    <result column="project_id" property="projectId" jdbcType="BIGINT" />
    <result column="plan_step" property="planStep" jdbcType="INTEGER" />
    <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="add_time" property="addTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, request_id, contract_no, request_no, project_id, plan_step, total_amount, status, 
    add_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jack.entity.CmsWithholdRequestPrepareExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cms_withhold_request_prepare
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from cms_withhold_request_prepare
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from cms_withhold_request_prepare
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jack.entity.CmsWithholdRequestPrepareExample" >
    delete from cms_withhold_request_prepare
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jack.entity.CmsWithholdRequestPrepare" >
    insert into cms_withhold_request_prepare (id, request_id, contract_no, 
      request_no, project_id, plan_step, 
      total_amount, status, add_time
      )
    values (#{id,jdbcType=BIGINT}, #{requestId,jdbcType=BIGINT}, #{contractNo,jdbcType=CHAR}, 
      #{requestNo,jdbcType=CHAR}, #{projectId,jdbcType=BIGINT}, #{planStep,jdbcType=INTEGER}, 
      #{totalAmount,jdbcType=DECIMAL}, #{status,jdbcType=INTEGER}, #{addTime,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jack.entity.CmsWithholdRequestPrepare" >
    insert into cms_withhold_request_prepare
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="requestId != null" >
        request_id,
      </if>
      <if test="contractNo != null" >
        contract_no,
      </if>
      <if test="requestNo != null" >
        request_no,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="planStep != null" >
        plan_step,
      </if>
      <if test="totalAmount != null" >
        total_amount,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="requestId != null" >
        #{requestId,jdbcType=BIGINT},
      </if>
      <if test="contractNo != null" >
        #{contractNo,jdbcType=CHAR},
      </if>
      <if test="requestNo != null" >
        #{requestNo,jdbcType=CHAR},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="planStep != null" >
        #{planStep,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null" >
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jack.entity.CmsWithholdRequestPrepareExample" resultType="java.lang.Integer" >
    select count(*) from cms_withhold_request_prepare
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update cms_withhold_request_prepare
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.requestId != null" >
        request_id = #{record.requestId,jdbcType=BIGINT},
      </if>
      <if test="record.contractNo != null" >
        contract_no = #{record.contractNo,jdbcType=CHAR},
      </if>
      <if test="record.requestNo != null" >
        request_no = #{record.requestNo,jdbcType=CHAR},
      </if>
      <if test="record.projectId != null" >
        project_id = #{record.projectId,jdbcType=BIGINT},
      </if>
      <if test="record.planStep != null" >
        plan_step = #{record.planStep,jdbcType=INTEGER},
      </if>
      <if test="record.totalAmount != null" >
        total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null" >
        add_time = #{record.addTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update cms_withhold_request_prepare
    set id = #{record.id,jdbcType=BIGINT},
      request_id = #{record.requestId,jdbcType=BIGINT},
      contract_no = #{record.contractNo,jdbcType=CHAR},
      request_no = #{record.requestNo,jdbcType=CHAR},
      project_id = #{record.projectId,jdbcType=BIGINT},
      plan_step = #{record.planStep,jdbcType=INTEGER},
      total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jack.entity.CmsWithholdRequestPrepare" >
    update cms_withhold_request_prepare
    <set >
      <if test="requestId != null" >
        request_id = #{requestId,jdbcType=BIGINT},
      </if>
      <if test="contractNo != null" >
        contract_no = #{contractNo,jdbcType=CHAR},
      </if>
      <if test="requestNo != null" >
        request_no = #{requestNo,jdbcType=CHAR},
      </if>
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="planStep != null" >
        plan_step = #{planStep,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null" >
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jack.entity.CmsWithholdRequestPrepare" >
    update cms_withhold_request_prepare
    set request_id = #{requestId,jdbcType=BIGINT},
      contract_no = #{contractNo,jdbcType=CHAR},
      request_no = #{requestNo,jdbcType=CHAR},
      project_id = #{projectId,jdbcType=BIGINT},
      plan_step = #{planStep,jdbcType=INTEGER},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>